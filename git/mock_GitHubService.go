// Code generated by mockery v2.38.0. DO NOT EDIT.

package git

import mock "github.com/stretchr/testify/mock"

// MockGitHubService is an autogenerated mock type for the GitHubService type
type MockGitHubService struct {
	mock.Mock
}

// CreatePullRequest provides a mock function with given fields: baseBranch, headBranch
func (_m *MockGitHubService) CreatePullRequest(baseBranch string, headBranch string) {
	_m.Called(baseBranch, headBranch)
}

// GetPullRequests provides a mock function with given fields:
func (_m *MockGitHubService) GetPullRequests() []PullRequest {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPullRequests")
	}

	var r0 []PullRequest
	if rf, ok := ret.Get(0).(func() []PullRequest); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]PullRequest)
		}
	}

	return r0
}

// NewMockGitHubService creates a new instance of MockGitHubService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGitHubService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGitHubService {
	mock := &MockGitHubService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
